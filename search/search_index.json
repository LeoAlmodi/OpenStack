{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Computa\u00e7\u00e3o em Nuvem","text":"Edi\u00e7\u00e3o <p>2025.1</p>"},{"location":"#kit-p","title":"KIT-P","text":"<p>Jo\u00e3o da Silva</p> <p>Pedro de Souza</p>"},{"location":"#entregas","title":"Entregas","text":"<ul> <li> Roteiro 1 - Data 23/02/2025</li> <li> Roteiro 2</li> <li> Roteiro 3</li> <li> Roteiro 4</li> <li> Projeto</li> </ul>"},{"location":"#referencias","title":"Refer\u00eancias","text":"<p>Material for MkDocs</p>"},{"location":"roteiro1/main/","title":"Roteiro 1","text":""},{"location":"roteiro1/main/#objetivo","title":"Objetivo","text":"<ul> <li>Entender os conceitos b\u00e1sicos sobre uma plataforma de gerenciamento de hardware e introduzir conceitos b\u00e1sicos sobre redes de computadores.</li> </ul>"},{"location":"roteiro1/main/#instalando-o-maas","title":"Instalando o MAAS","text":"sudo snap install maas --channel=3.5/Stable <p>Dashboard do MAAS.</p> <p>Conforme ilustrado acima, a tela inicial do MAAS apresenta um dashboard com informa\u00e7\u00f5es sobre o estado atual dos servidores gerenciados. O dashboard \u00e9 composto por diversos pain\u00e9is, cada um exibindo informa\u00e7\u00f5es sobre um aspecto espec\u00edfico do ambiente gerenciado. Os pain\u00e9is podem ser configurados e personalizados de acordo com as necessidades do usu\u00e1rio.</p>"},{"location":"roteiro1/main/#configurando-o-maas","title":"Configurando o MAAS","text":"<p>Inicializando o MaaS:</p> sudo maas init region+rack --maas-url http://172.16.0.3:5240/MAAS --database-uri maas-test-db:///sudo maas createadmin <p>Gerando um par de chaves para autentica\u00e7\u00e3o.</p> ssh-keygen -t rsacat ./.ssh/id_rsa.pub"},{"location":"roteiro1/main/#chaveando-o-dhcp","title":"Chaveando o DHCP","text":"<p>Foi habilitado o DHCP na subrede pelo MaaS Controller, e ent\u00e3o, alterado o Reserved Range.</p> <p>Ap\u00f3s isso, o DNS da subnet foi apontado para o DNS da rede externa, e por fim, desabilitado o DHCP do roteador.</p>"},{"location":"roteiro1/main/#checando-saude-do-maas","title":"Checando sa\u00fade do MAAS","text":"<p>Confirmamos a sa\u00fade do sistema MAAS visitando a p\u00e1gina Controladores na interface web (dashboard).</p>"},{"location":"roteiro1/main/#comissionando-servidores","title":"Comissionando servidores","text":"<p>Nessa etapa, cadastramos os hosts (machines) dispon\u00edveis, server 1 at\u00e9 server 5. </p> <p>Para cada m\u00e1quina, fizemos a seguinte etapa.</p> <ul> <li>Alteramos a op\u00e7\u00e3o Power Type para Intel AMT</li> <li>Colocamos o MacAddress da m\u00e1quina</li> <li>Colocamos a senha </li> <li>Por fim, o IP do AMT.</li> </ul> <p>E no final, tamb\u00e9m adicionamos o Roteador como devices no dashboard do MaaS.</p>"},{"location":"roteiro1/main/#criando-ovs-bridge","title":"Criando OVS bridge","text":"<p>Uma Open vSwitch (OVS) bridge reduz a necessidade de duas interfaces de rede f\u00edsicas.</p> <p>O nome da ponte ser\u00e1 referenciado em outras partes dos roteiros, chamaremos de \"br-ex\".</p> <p>Ser\u00e1 feito isso para todos os hosts.</p>"},{"location":"roteiro1/main/#app","title":"App","text":""},{"location":"roteiro1/main/#tarefa-1","title":"Tarefa 1","text":"<p>Ap\u00f3s instalar o postgresql no server 1, iremos testar algumas coisas.</p> <p></p> <p>Funcionando e seu Status est\u00e1 como \"Ativo\" para o Sistema Operacional.</p> <p></p> <p>Acessivel na pr\u00f3pria maquina na qual ele foi implantado.</p> <p></p> <p>Acessivel a partir de uma conex\u00e3o vinda da m\u00e1quina MAIN.</p> <p></p> <p>Verfificando em qual porta este servi\u00e7o est\u00e1 funcionando.</p>"},{"location":"roteiro1/main/#tarefa-2","title":"Tarefa 2","text":"<p>Agora iremos instalar no server 2 o Django manualmente.</p> <p></p> <p>Dashboard do MAAS com as m\u00e1quinas.</p> <p></p> <p>Aba images, com as imagens sincronizadas.</p> <p></p> <p>Server 1 - testes de hardware e commissioning com Status \"OK\".</p> <p></p> <p>Server 2 - testes de hardware e commissioning com Status \"OK\".</p> <p></p> <p>Server 3 - testes de hardware e commissioning com Status \"OK\".</p> <p></p> <p>Server 4 - testes de hardware e commissioning com Status \"OK\".</p> <p></p> <p>Server 5 - testes de hardware e commissioning com Status \"OK\".</p>"},{"location":"roteiro1/main/#tarefa-3","title":"Tarefa 3","text":"<p>Aqui est\u00e1 o Django do servidor 2 funcionando.</p> <p></p> <p>Aplica\u00e7\u00e3o Django conectada ao server.</p> <p>Primeiramente, duas m\u00e1quinas (server 1 e server 2) foram alocadas, e em seguida o grupo deu deploy em ambas com a imagem do ubuntu 22.04 LTS. Ap\u00f3s isso, dentro do server 1, foi instalado o postgreSQL, criado um usuario para a aplica\u00e7\u00e3o, e, ent\u00e3o, criado um database chamado tasks. Depois disso, dois arquivos foram mudados (postgresql.conf e pg_hba.conf), para expor o servi\u00e7o para acesso e deixar liberado para qualquer m\u00e1quina dentro da subnet do kit. No fim, foi liberado o firewall e reinicidado o servi\u00e7o. No server 2, foi clonado um reposit\u00f3rio de instala\u00e7\u00e3o do django, e foi rodado o script de instala\u00e7\u00e3o. Ap\u00f3s a instala\u00e7\u00e3o foi configurado que o banco de dados seja o criado no server 1. Logo depois, foi dado reboot do server, adicionado o IPV4 do server1 no /etc/hosts e testado o acesso do servi\u00e7o pela porta 8080 no terminal do MaaS.</p>"},{"location":"roteiro1/main/#tarefa-4","title":"Tarefa 4","text":"<p>Tamb\u00e9m foi instalado no server 3 a aplica\u00e7\u00e3o Django, por\u00e9m utilizando a ferramenta Ansible.</p> <p></p> <p>Dashboard do MAAS com as 3 Maquinas e seus respectivos IPs.</p> <p></p> <p>Aplica\u00e7\u00e3o Django conectada ao server 2.</p> <p></p> <p>Aplica\u00e7\u00e3o Django conectada ao server 3.</p> <p>A diferen\u00e7a entre instalar o Django manualmente e utilizando o Ansible est\u00e1 na forma como os comandos s\u00e3o executados. Na instala\u00e7\u00e3o manual, cada comando precisa ser digitado e executado individualmente, tornando o processo mais demorado e suscet\u00edvel a erros. J\u00e1 com o Ansible, todas as etapas da instala\u00e7\u00e3o s\u00e3o definidas em um playbook YAML, permitindo que a configura\u00e7\u00e3o seja aplicada automaticamente e de forma padronizada. Isso torna o processo mais eficiente, reprodut\u00edvel e escal\u00e1vel, especialmente em ambientes com m\u00faltiplos servidores.</p>"},{"location":"roteiro1/main/#tarefa-5","title":"Tarefa 5","text":"<p>Para montar o ponto \u00fanico de entrada, utilizaremos uma aplica\u00e7\u00e3o de proxy reverso como load balancer. Ser\u00e1 instalado no server 4.</p> <p></p> <p>Dashboard do MAAS com as 4 Maquinas e seus respectivos IPs.</p> <p></p> <p>Pelo load balancer, o server 2 foi escolhido.</p> <p></p> <p>Pelo load balancer, o server 3 foi escolhido.</p>"},{"location":"roteiro1/main/#discussoes","title":"Discuss\u00f5es","text":"<p>As principais difuculdades encontradas foram quando encontr\u00e1vamos algum erro de permiss\u00e3o, ou algo parecido, era dif\u00edcil entender aonde encontrar o arquivo e arrum\u00e1-lo. Por\u00e9m o que foi mais f\u00e1cil foi entender, em geral, o uso e a import\u00e2ncia do MaaS para a subrede. E o mais dif\u00edcil foi fazer o load balancer.</p>"},{"location":"roteiro1/main/#conclusao","title":"Conclus\u00e3o","text":"<p>O que foi poss\u00edvel concluir com a realiza\u00e7\u00e3o do roteiro?</p> <p>Em conclus\u00e3o, o roteiro foi importante para o aprendizado e entendimento do bare metal e o b\u00e1sico da cria\u00e7\u00e3o de uma subrede. Tamb\u00e9m foi interessante entender alguns problemas comuns na cria\u00e7\u00e3o, como por exemplo a quest\u00e3o de permiss\u00e3o e conex\u00e3o entre os hosts.</p>"},{"location":"roteiro2/main/","title":"Roteiro 2","text":""},{"location":"roteiro2/main/#objetivo","title":"Objetivo","text":"<ul> <li>Entender os conceitos b\u00e1sicos sobre uma plataforma de gerenciamento de aplica\u00e7\u00f5es distribu\u00eddas.</li> <li>Entender os conceitos b\u00e1sicos de comunica\u00e7\u00e3o entre aplica\u00e7\u00f5es e servi\u00e7os.</li> </ul>"},{"location":"roteiro2/main/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Ter o Bare Metal feito (roteiro anterior)</li> </ul>"},{"location":"roteiro2/main/#criando-infraestrutura-para-deploy-com-juju","title":"Criando Infraestrutura para deploy com Juju","text":"<p>Para montar a nossa Cloud Privada, vamos utilizar um orquestrador de deploy que integra com o MaaS. Primeiramente, temos que verificar  se todas as m\u00e1quinas est\u00e3o ready.</p> <p>Ap\u00f3s isso, o Juju deve ser instalado no main:</p> sudo snap install juju --channel 3.6 <p>Com o Juju instalado, devemos criar dois arquivos:</p> <ul> <li> <p>Criar um arquivo de configura\u00e7\u00e3o maas-cloud.yaml, e depois de salvar, rodar o seguinte comando:      <pre><code>$ juju add-cloud --client -f maas-cloud.yaml maas-one\n</code></pre></p> </li> <li> <p>Criar um arquivo de credenciais maas-creds.yaml, e depois de salvar, rodar o seguinte comando:      <pre><code>$ juju add-credential --client -f maas-creds.yaml maas-one\n</code></pre></p> </li> </ul> <p>Iremos criar o controlador no server1 para isso fa\u00e7a a tag da maquina com o nome juju atrav\u00e9s do dashboard MAAS na maquina server1.</p> juju bootstrap --bootstrap-series=jammy --constraints tags=juju maas-one maas-controller"},{"location":"roteiro2/main/#app","title":"App","text":""},{"location":"roteiro2/main/#instalando-o-dashboard-do-juju-para-o-controlador-principal-controller","title":"Instalando o Dashboard do JUJU para o controlador principal (controller)","text":"juju switch controllerjuju deploy juju-dashboard dashboard --to lxd:0juju integrate dashboard controllerjuju expose dashboardjuju dashboard <p>Ap\u00f3s a instala\u00e7\u00e3o do Dashboard, rodamos os seguintes comandos:</p> juju switch maas-controller:admin/maas"},{"location":"roteiro2/main/#fazendo-o-deploy-da-aplicacao-grafana-e-prometheus","title":"Fazendo o deploy da Aplica\u00e7\u00e3o Grafana e Prometheus","text":""},{"location":"roteiro2/main/#deploy-grafana-e-prometheus","title":"Deploy Grafana e Prometheus","text":"<ul> <li>Criamos uma pasta chamada charms para baixar o charm do Grafana e do Prometheus do reposit\u00f3rio charm-hub.</li> </ul> mkdir -p /home/cloud/charmscd /home/cloud/charms <ul> <li>Baixamos o charm do https://charmhub.io/grafana usando o comando juju download.</li> </ul> juju download grafana <ul> <li>Tamb\u00e9m vamos utilizar o charm do Prometheus</li> </ul> juju download prometheus2 <ul> <li>Agora demos o deploy de ambas aplica\u00e7\u00f5es</li> </ul> juju deploy ./prometheus2_r60.charmjuju deploy ./grafana_r69.charm --series focal <ul> <li>Por \u00faltimo, fizemos a integra\u00e7\u00e3o dessas duas aplica\u00e7\u00f5es</li> </ul> juju integrate grafana:grafana-source prometheus2:grafana-source"},{"location":"roteiro2/main/#tarefa-1","title":"Tarefa 1","text":"<p>Dashboard do MAAS com as Maquinas e seus respectivos IPs.</p> <p></p> <p>Tela do comando \"juju status\" depois que o Grafana estiver \"active\".</p> <p></p> <p>Dashboard do Grafana com o Prometheus aparecendo como source.</p> <p></p> <p>Dashboard a partir da rede do Insper.</p> <p></p> <p>Aplica\u00e7\u00f5es sendo gerenciadas pelo JUJU</p>"}]}