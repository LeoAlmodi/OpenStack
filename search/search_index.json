{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Computa\u00e7\u00e3o em Nuvem","text":"Edi\u00e7\u00e3o <p>2025.1</p>"},{"location":"#kit-x","title":"KIT-X","text":"<p>Leonardo Almodi dos Reis</p> <p>Arthur Esteves Calabresi</p>"},{"location":"#entregas","title":"Entregas","text":"<ul> <li> Roteiro 1 - MAAS</li> <li> Roteiro 2 - JUJU</li> <li> Roteiro 3 - OpenStack</li> <li> Roteiro 4 - SLA, DR e IaC</li> <li> Projeto - FastAPI e AWS</li> </ul>"},{"location":"#referencias","title":"Refer\u00eancias","text":"<p>Material for MkDocs</p>"},{"location":"projeto/main/","title":"Projeto","text":"<p>O projeto se trata de uma API RESTful que \u00e9 ser capaz de cadastrar e autenticar usu\u00e1rios.</p> <p>Consiste em duas entregas, Docker e AWS.</p> <ul> <li>Integrantes: Leonardo Almodi dos Reis e Arthur Esteves Calabresi.</li> <li>Curso: Engenharia de Computa\u00e7\u00e3o.</li> <li>Ano: 2025.</li> </ul>"},{"location":"projeto/main/#entrega-1","title":"Entrega 1","text":""},{"location":"projeto/main/#explicacao","title":"Explica\u00e7\u00e3o","text":"<p>Na primeira etapa do projeto, o grupo desenvolveu uma API RESTful com funcionalidades de cadastro e login de usu\u00e1rios, al\u00e9m de um endpoint dedicado \u00e0 consulta de cota\u00e7\u00f5es de moedas, utilizando a AwesomeAPI. A aplica\u00e7\u00e3o permite o registro de novos usu\u00e1rios e a realiza\u00e7\u00e3o de login com autentica\u00e7\u00e3o baseada em tokens. Ap\u00f3s a autentica\u00e7\u00e3o, o usu\u00e1rio tem acesso a um endpoint que se comunica com a AwesomeAPI e retorna, em tempo real, as cota\u00e7\u00f5es atualizadas de diversas moedas.</p> <p>Com as funcionalidades principais implementadas, a API foi dockerizada, assegurando portabilidade e facilidade de execu\u00e7\u00e3o em diferentes ambientes. A imagem resultante foi publicada no Docker Hub, facilitando o compartilhamento e a implanta\u00e7\u00e3o da aplica\u00e7\u00e3o.</p>"},{"location":"projeto/main/#como-executar-o-projeto","title":"Como Executar o Projeto","text":"<ol> <li> <p>Clone o reposit\u00f3rio: <pre><code>docker pull arthurec/projeto01-nuvens\n</code></pre></p> </li> <li> <p>Inicie o container: <pre><code>docker compose up --build -d\n</code></pre></p> </li> </ol>"},{"location":"projeto/main/#documentacao-dos-endpoints","title":"Documenta\u00e7\u00e3o dos Endpoints","text":""},{"location":"projeto/main/#registrar-usuario","title":"\ud83d\udd10 Registrar Usu\u00e1rio","text":"<ul> <li>URL: <code>POST /registrar</code> </li> <li>Descri\u00e7\u00e3o: Cria um novo usu\u00e1rio e retorna um token JWT.  </li> <li>Status de sucesso: <code>201 Created</code></li> </ul>"},{"location":"projeto/main/#corpo-da-requisicao","title":"Corpo da Requisi\u00e7\u00e3o:","text":"<pre><code>{\n  \"nome\": \"Jo\u00e3o da Silva\",\n  \"email\": \"joao@email.com\",\n  \"senha\": \"minhasenha123\"\n}\n</code></pre>"},{"location":"projeto/main/#resposta-de-sucesso","title":"Resposta de Sucesso:","text":"<pre><code>{\n  \"jwt\": \"&lt;token JWT gerado&gt;\"\n}\n</code></pre>"},{"location":"projeto/main/#erros","title":"Erros:","text":"<ul> <li><code>400 Bad Request</code> \u2013 E-mail j\u00e1 cadastrado</li> </ul>"},{"location":"projeto/main/#login-de-usuario","title":"\ud83d\udd13 Login de Usu\u00e1rio","text":"<ul> <li>URL: <code>POST /login</code> </li> <li>Descri\u00e7\u00e3o: Realiza login e retorna um token JWT.  </li> <li>Status de sucesso: <code>200 OK</code></li> </ul>"},{"location":"projeto/main/#corpo-da-requisicao_1","title":"Corpo da Requisi\u00e7\u00e3o:","text":"<pre><code>{\n  \"email\": \"joao@email.com\",\n  \"senha\": \"minhasenha123\"\n}\n</code></pre>"},{"location":"projeto/main/#resposta-de-sucesso_1","title":"Resposta de Sucesso:","text":"<pre><code>{\n  \"jwt\": \"&lt;token JWT gerado&gt;\"\n}\n</code></pre>"},{"location":"projeto/main/#erros_1","title":"Erros:","text":"<ul> <li><code>401 Unauthorized</code> \u2013 Credenciais inv\u00e1lidas</li> </ul>"},{"location":"projeto/main/#consultar-cotacao-de-moedas","title":"\ud83d\udcb1 Consultar Cota\u00e7\u00e3o de Moedas","text":"<ul> <li>URL: <code>GET /consultar</code> </li> <li>Descri\u00e7\u00e3o: Retorna a cota\u00e7\u00e3o atual de moedas via AwesomeAPI.  </li> <li>Requer autentica\u00e7\u00e3o: <code>Bearer Token</code> </li> <li>Status de sucesso: <code>200 OK</code></li> </ul>"},{"location":"projeto/main/#cabecalho","title":"Cabe\u00e7alho:","text":"<pre><code>Authorization: Bearer &lt;token JWT&gt;\n</code></pre>"},{"location":"projeto/main/#resposta-de-sucesso_2","title":"Resposta de Sucesso:","text":"<pre><code>{\n  \"dados\": {\n    \"USDBRL\": {\n      \"code\": \"USD\",\n      \"codein\": \"BRL\",\n      \"name\": \"D\u00f3lar Americano/Real Brasileiro\",\n      \"high\": \"5.3241\",\n      \"low\": \"5.2671\"\n      // outros dados...\n    }\n  }\n}\n</code></pre>"},{"location":"projeto/main/#erros_2","title":"Erros:","text":"<ul> <li><code>401 Unauthorized</code> \u2013 Usu\u00e1rio n\u00e3o autenticado</li> </ul>"},{"location":"projeto/main/#health-check","title":"\u2764\ufe0f Health Check","text":"<ul> <li>URL: <code>GET /health-check</code> </li> <li>Descri\u00e7\u00e3o: Verifica o status da API.  </li> <li>Status de sucesso: <code>200 OK</code></li> </ul>"},{"location":"projeto/main/#resposta","title":"Resposta:","text":"<pre><code>{\n  \"statusCode\": 200,\n  \"timestamp\": \"2025-05-30T14:32:10.123456\",\n  \"hostname\": \"api-container-12345\"\n}\n</code></pre>"},{"location":"projeto/main/#screenshots-dos-endpoints-funcionando","title":"Screenshots dos Endpoints funcionando:","text":"<p>Endpoint de cadastro.</p> <p></p> <p>Endpoint de login.</p> <p></p> <p>Endpoint para consultar o scrap, que funciona apenas se o usu\u00e1rio tiver cadastro e token.</p> <p></p> <p>Endpoint de health check.</p>"},{"location":"projeto/main/#video-de-execucao-da-aplicacao","title":"V\u00eddeo de Execu\u00e7\u00e3o da Aplica\u00e7\u00e3o","text":"<p>Baixar/Ver v\u00eddeo (.webm)</p>"},{"location":"projeto/main/#link-para-o-docker-hub-do-projeto","title":"Link Para o Docker Hub do Projeto","text":"<p>Clique aqui para abrir o o link do Docker Hub.</p>"},{"location":"projeto/main/#compose-final","title":"Compose Final","text":"<p>O arquivo compose.yaml est\u00e1 na ra\u00edz do projeto. Seu conte\u00fado \u00e9 o seguinte:</p> <p>Arquivo: <code>compose.yaml</code> </p> <pre><code>services:\n  api:\n    image: arthurec/projeto01-nuvens\n    env_file: .env\n    restart: always\n    ports:\n      - \"8000:8000\"\n    depends_on:\n      - db\n\n  db:\n    image: postgres:latest\n    hostname: db\n    environment:\n      POSTGRES_USER: ${DATABASE_USER:-projeto}\n      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-projeto}\n      POSTGRES_DB: ${DATABASE_NAME:-projeto}\n</code></pre>"},{"location":"projeto/main/#entrega-2","title":"Entrega 2","text":""},{"location":"projeto/main/#projeto-fastapi-no-aws-lightsail","title":"Projeto FastAPI no AWS Lightsail","text":"<p>A parte 2 do projeto consiste em:</p> <ul> <li>Implantar a API utilizando o AWS Lightsail Container Service.</li> <li>Configurar o PostgreSQL no Lightsail.</li> <li>Conectar a aplica\u00e7\u00e3o ao banco de dados.</li> <li>Gerenciar e monitorar o custo do servi\u00e7o em produ\u00e7\u00e3o. (Nesse projeto o limite de gasto por m\u00eas \u00e9 de 50 d\u00f3lares)</li> </ul> <p>Antes de iniciar o grupo teve que certificar que:</p> <ul> <li>Conta ativa na AWS com acesso ao Lightsail.</li> <li>Docker instalado e configurado.</li> <li>C\u00f3digo da aplica\u00e7\u00e3o FastAPI pronto e funcional localmente.</li> </ul>"},{"location":"projeto/main/#screenshots-dos-endpoints-funcionando-no-aws","title":"Screenshots dos Endpoints funcionando no AWS:","text":"<p>Endpoint de cadastro.</p> <p></p> <p>Endpoint de login.</p> <p></p> <p>Endpoint para consultar o scrap, que funciona apenas se o usu\u00e1rio tiver cadastro e token.</p> <p></p> <p>Endpoint de health check.</p>"},{"location":"projeto/main/#screenshot-de-infraestrutura-na-aws","title":"Screenshot de infraestrutura na AWS:","text":"<p>Infraestrutura API.</p> <p></p> <p>Infraestrutura DB.</p> <p></p> <p>Infraestrutura.</p>"},{"location":"projeto/main/#screenshot-do-custo-no-dia-eda-submissao-dos-documentos","title":"Screenshot do custo no dia eda submiss\u00e3o dos documentos:","text":"<p>Tela dos custos.</p>"},{"location":"projeto/main/#video-de-execucao-da-aplicacao-funcionando-no-ligthsail","title":"V\u00eddeo de execu\u00e7\u00e3o da aplica\u00e7\u00e3o funcionando no Ligthsail.","text":"<p>Baixar/Ver v\u00eddeo (.webm)</p>"},{"location":"roteiro1/main/","title":"Roteiro 1","text":""},{"location":"roteiro1/main/#objetivo","title":"Objetivo","text":"<ul> <li>Entender os conceitos b\u00e1sicos sobre uma plataforma de gerenciamento de hardware e introduzir conceitos b\u00e1sicos sobre redes de computadores.</li> </ul>"},{"location":"roteiro1/main/#instalando-o-maas","title":"Instalando o MAAS","text":"sudo snap install maas --channel=3.5/Stable <p>Dashboard do MAAS.</p> <p>Conforme ilustrado acima, a tela inicial do MAAS apresenta um dashboard com informa\u00e7\u00f5es sobre o estado atual dos servidores gerenciados. O dashboard \u00e9 composto por diversos pain\u00e9is, cada um exibindo informa\u00e7\u00f5es sobre um aspecto espec\u00edfico do ambiente gerenciado. Os pain\u00e9is podem ser configurados e personalizados de acordo com as necessidades do usu\u00e1rio.</p>"},{"location":"roteiro1/main/#configurando-o-maas","title":"Configurando o MAAS","text":"<p>Inicializando o MaaS:</p> sudo maas init region+rack --maas-url http://172.16.0.3:5240/MAAS --database-uri maas-test-db:///sudo maas createadmin <p>Gerando um par de chaves para autentica\u00e7\u00e3o.</p> ssh-keygen -t rsacat ./.ssh/id_rsa.pub"},{"location":"roteiro1/main/#chaveando-o-dhcp","title":"Chaveando o DHCP","text":"<p>Foi habilitado o DHCP na subrede pelo MaaS Controller, e ent\u00e3o, alterado o Reserved Range.</p> <p>Ap\u00f3s isso, o DNS da subnet foi apontado para o DNS da rede externa, e por fim, desabilitado o DHCP do roteador.</p>"},{"location":"roteiro1/main/#checando-saude-do-maas","title":"Checando sa\u00fade do MAAS","text":"<p>Confirmamos a sa\u00fade do sistema MAAS visitando a p\u00e1gina Controladores na interface web (dashboard).</p>"},{"location":"roteiro1/main/#comissionando-servidores","title":"Comissionando servidores","text":"<p>Nessa etapa, cadastramos os hosts (machines) dispon\u00edveis, server 1 at\u00e9 server 5. </p> <p>Para cada m\u00e1quina, fizemos a seguinte etapa.</p> <ul> <li>Alteramos a op\u00e7\u00e3o Power Type para Intel AMT</li> <li>Colocamos o MacAddress da m\u00e1quina</li> <li>Colocamos a senha </li> <li>Por fim, o IP do AMT.</li> </ul> <p>E no final, tamb\u00e9m adicionamos o Roteador como devices no dashboard do MaaS.</p>"},{"location":"roteiro1/main/#criando-ovs-bridge","title":"Criando OVS bridge","text":"<p>Uma Open vSwitch (OVS) bridge reduz a necessidade de duas interfaces de rede f\u00edsicas.</p> <p>O nome da ponte ser\u00e1 referenciado em outras partes dos roteiros, chamaremos de \"br-ex\".</p> <p>Ser\u00e1 feito isso para todos os hosts.</p>"},{"location":"roteiro1/main/#app","title":"App","text":""},{"location":"roteiro1/main/#tarefa-1","title":"Tarefa 1","text":"<p>Ap\u00f3s instalar o postgresql no server 1, iremos testar algumas coisas.</p> <p></p> <p>Funcionando e seu Status est\u00e1 como \"Ativo\" para o Sistema Operacional.</p> <p></p> <p>Acessivel na pr\u00f3pria maquina na qual ele foi implantado.</p> <p></p> <p>Acessivel a partir de uma conex\u00e3o vinda da m\u00e1quina MAIN.</p> <p></p> <p>Verfificando em qual porta este servi\u00e7o est\u00e1 funcionando.</p>"},{"location":"roteiro1/main/#tarefa-2","title":"Tarefa 2","text":"<p>Agora iremos instalar no server 2 o Django manualmente.</p> <p></p> <p>Dashboard do MAAS com as m\u00e1quinas.</p> <p></p> <p>Aba images, com as imagens sincronizadas.</p> <p></p> <p>Server 1 - testes de hardware e commissioning com Status \"OK\".</p> <p></p> <p>Server 2 - testes de hardware e commissioning com Status \"OK\".</p> <p></p> <p>Server 3 - testes de hardware e commissioning com Status \"OK\".</p> <p></p> <p>Server 4 - testes de hardware e commissioning com Status \"OK\".</p> <p></p> <p>Server 5 - testes de hardware e commissioning com Status \"OK\".</p>"},{"location":"roteiro1/main/#tarefa-3","title":"Tarefa 3","text":"<p>Aqui est\u00e1 o Django do servidor 2 funcionando.</p> <p></p> <p>Aplica\u00e7\u00e3o Django conectada ao server.</p> <p>Primeiramente, duas m\u00e1quinas (server 1 e server 2) foram alocadas, e em seguida o grupo deu deploy em ambas com a imagem do ubuntu 22.04 LTS. Ap\u00f3s isso, dentro do server 1, foi instalado o postgreSQL, criado um usuario para a aplica\u00e7\u00e3o, e, ent\u00e3o, criado um database chamado tasks. Depois disso, dois arquivos foram mudados (postgresql.conf e pg_hba.conf), para expor o servi\u00e7o para acesso e deixar liberado para qualquer m\u00e1quina dentro da subnet do kit. No fim, foi liberado o firewall e reinicidado o servi\u00e7o. No server 2, foi clonado um reposit\u00f3rio de instala\u00e7\u00e3o do django, e foi rodado o script de instala\u00e7\u00e3o. Ap\u00f3s a instala\u00e7\u00e3o foi configurado que o banco de dados seja o criado no server 1. Logo depois, foi dado reboot do server, adicionado o IPV4 do server1 no /etc/hosts e testado o acesso do servi\u00e7o pela porta 8080 no terminal do MaaS.</p>"},{"location":"roteiro1/main/#tarefa-4","title":"Tarefa 4","text":"<p>Tamb\u00e9m foi instalado no server 3 a aplica\u00e7\u00e3o Django, por\u00e9m utilizando a ferramenta Ansible.</p> <p></p> <p>Dashboard do MAAS com as 3 Maquinas e seus respectivos IPs.</p> <p></p> <p>Aplica\u00e7\u00e3o Django conectada ao server 2.</p> <p></p> <p>Aplica\u00e7\u00e3o Django conectada ao server 3.</p> <p>A diferen\u00e7a entre instalar o Django manualmente e utilizando o Ansible est\u00e1 na forma como os comandos s\u00e3o executados. Na instala\u00e7\u00e3o manual, cada comando precisa ser digitado e executado individualmente, tornando o processo mais demorado e suscet\u00edvel a erros. J\u00e1 com o Ansible, todas as etapas da instala\u00e7\u00e3o s\u00e3o definidas em um playbook YAML, permitindo que a configura\u00e7\u00e3o seja aplicada automaticamente e de forma padronizada. Isso torna o processo mais eficiente, reprodut\u00edvel e escal\u00e1vel, especialmente em ambientes com m\u00faltiplos servidores.</p>"},{"location":"roteiro1/main/#tarefa-5","title":"Tarefa 5","text":"<p>Para montar o ponto \u00fanico de entrada, utilizaremos uma aplica\u00e7\u00e3o de proxy reverso como load balancer. Ser\u00e1 instalado no server 4.</p> <p></p> <p>Dashboard do MAAS com as 4 Maquinas e seus respectivos IPs.</p> <p></p> <p>Pelo load balancer, o server 2 foi escolhido.</p> <p></p> <p>Pelo load balancer, o server 3 foi escolhido.</p>"},{"location":"roteiro1/main/#discussoes","title":"Discuss\u00f5es","text":"<p>As principais difuculdades encontradas foram quando encontr\u00e1vamos algum erro de permiss\u00e3o, ou algo parecido, era dif\u00edcil entender aonde encontrar o arquivo e arrum\u00e1-lo. Por\u00e9m o que foi mais f\u00e1cil foi entender, em geral, o uso e a import\u00e2ncia do MaaS para a subrede. E o mais dif\u00edcil foi fazer o load balancer.</p>"},{"location":"roteiro1/main/#conclusao","title":"Conclus\u00e3o","text":"<p>O que foi poss\u00edvel concluir com a realiza\u00e7\u00e3o do roteiro?</p> <p>Em conclus\u00e3o, o roteiro foi importante para o aprendizado e entendimento do bare metal e o b\u00e1sico da cria\u00e7\u00e3o de uma subrede. Tamb\u00e9m foi interessante entender alguns problemas comuns na cria\u00e7\u00e3o, como por exemplo a quest\u00e3o de permiss\u00e3o e conex\u00e3o entre os hosts.</p>"},{"location":"roteiro2/main/","title":"Roteiro 2","text":""},{"location":"roteiro2/main/#objetivo","title":"Objetivo","text":"<ul> <li>Entender os conceitos b\u00e1sicos sobre uma plataforma de gerenciamento de aplica\u00e7\u00f5es distribu\u00eddas.</li> <li>Entender os conceitos b\u00e1sicos de comunica\u00e7\u00e3o entre aplica\u00e7\u00f5es e servi\u00e7os.</li> </ul>"},{"location":"roteiro2/main/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Ter o Bare Metal feito (roteiro anterior)</li> </ul>"},{"location":"roteiro2/main/#criando-infraestrutura-para-deploy-com-juju","title":"Criando Infraestrutura para deploy com Juju","text":"<p>Para montar a nossa Cloud Privada, vamos utilizar um orquestrador de deploy que integra com o MaaS. Primeiramente, temos que verificar  se todas as m\u00e1quinas est\u00e3o ready.</p> <p>Ap\u00f3s isso, o Juju deve ser instalado no main:</p> sudo snap install juju --channel 3.6 <p>Com o Juju instalado, devemos criar dois arquivos:</p> <ul> <li> <p>Criar um arquivo de configura\u00e7\u00e3o maas-cloud.yaml, e depois de salvar, rodar o seguinte comando:      <pre><code>$ juju add-cloud --client -f maas-cloud.yaml maas-one\n</code></pre></p> </li> <li> <p>Criar um arquivo de credenciais maas-creds.yaml, e depois de salvar, rodar o seguinte comando:      <pre><code>$ juju add-credential --client -f maas-creds.yaml maas-one\n</code></pre></p> </li> </ul> <p>Iremos criar o controlador no server1 para isso fa\u00e7a a tag da maquina com o nome juju atrav\u00e9s do dashboard MAAS na maquina server1.</p> juju bootstrap --bootstrap-series=jammy --constraints tags=juju maas-one maas-controller"},{"location":"roteiro2/main/#app","title":"App","text":""},{"location":"roteiro2/main/#instalando-o-dashboard-do-juju-para-o-controlador-principal-controller","title":"Instalando o Dashboard do JUJU para o controlador principal (controller)","text":"juju switch controllerjuju deploy juju-dashboard dashboard --to lxd:0juju integrate dashboard controllerjuju expose dashboardjuju dashboard <p>Ap\u00f3s a instala\u00e7\u00e3o do Dashboard, rodamos os seguintes comandos:</p> juju switch maas-controller:admin/maas"},{"location":"roteiro2/main/#fazendo-o-deploy-da-aplicacao-grafana-e-prometheus","title":"Fazendo o deploy da Aplica\u00e7\u00e3o Grafana e Prometheus","text":""},{"location":"roteiro2/main/#deploy-grafana-e-prometheus","title":"Deploy Grafana e Prometheus","text":"<ul> <li>Criamos uma pasta chamada charms para baixar o charm do Grafana e do Prometheus do reposit\u00f3rio charm-hub.</li> </ul> mkdir -p /home/cloud/charmscd /home/cloud/charms <ul> <li>Baixamos o charm do https://charmhub.io/grafana usando o comando juju download.</li> </ul> juju download grafana <ul> <li>Tamb\u00e9m vamos utilizar o charm do Prometheus</li> </ul> juju download prometheus2 <ul> <li>Agora demos o deploy de ambas aplica\u00e7\u00f5es</li> </ul> juju deploy ./prometheus2_r60.charmjuju deploy ./grafana_r69.charm --series focal <ul> <li>Por \u00faltimo, fizemos a integra\u00e7\u00e3o dessas duas aplica\u00e7\u00f5es</li> </ul> juju integrate grafana:grafana-source prometheus2:grafana-source"},{"location":"roteiro2/main/#tarefa-1","title":"Tarefa 1","text":"<p>Dashboard do MAAS com as Maquinas e seus respectivos IPs.</p> <p></p> <p>Tela do comando \"juju status\" depois que o Grafana estiver \"active\".</p> <p></p> <p>Dashboard do Grafana com o Prometheus aparecendo como source.</p> <p></p> <p>Dashboard a partir da rede do Insper.</p> <p></p> <p>Aplica\u00e7\u00f5es sendo gerenciadas pelo JUJU</p>"},{"location":"roteiro3/main/","title":"Roteiro 3","text":""},{"location":"roteiro3/main/#objetivo","title":"Objetivo","text":"<ul> <li>Entender os conceitos b\u00e1sicos de Private Cloud.</li> <li>Aprofundar conceitos sobre redes virtuais SDN.</li> </ul>"},{"location":"roteiro3/main/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Terminar de Ler o cap\u00edtulo Juju.</li> <li>Realizar a leitura sobre o Openstack.<ul> <li>https://www.openstack.org/</li> <li>https://www.openstack.org/software/</li> <li>https://ubuntu.com/openstack/what-is-openstack</li> </ul> </li> <li>Realizar a leitura sobre o Openstack. [Jackson et al - Cap. 1 at\u00e9 Cap. 5].</li> </ul>"},{"location":"roteiro3/main/#infraestrutura","title":"Infraestrutura","text":"<p>Nesse roteiro vamos instalar um conjunto de aplica\u00e7\u00f5es denominado Openstack que vai permitir distribuirmos virtual machines usando os n\u00f3s dispon\u00edveis no kit.</p> <p>At\u00e9 o momento usamos o MAAS para orquestrar o bare metal e o juju para cuidar do deployment de aplica\u00e7\u00f5es (exemplo grafana e prometheus). Agora, vamos utilizar o Openstack para criar VMs e distribuir os servi\u00e7os em todas as m\u00e1quinas kit com maior efici\u00eancia.</p>"},{"location":"roteiro3/main/#1-instalando-o-juju-controller","title":"1. Instalando o Juju Controller","text":"<p>Adicionar a tag controller na m\u00e1quina server1:</p> <pre><code>juju bootstrap --bootstrap-series=jammy --constraints tags=controller maas-one maas-controller\n</code></pre>"},{"location":"roteiro3/main/#2-definindo-o-modelo-de-deploy","title":"2. Definindo o modelo de deploy","text":"<pre><code>juju add-model --config default-series=jammy openstack\njuju switch maas-controller:openstack\n</code></pre>"},{"location":"roteiro3/main/#3-ceph-osd","title":"3. Ceph OSD","text":"<p>Arquivo: <code>ceph-osd.yaml</code></p> <p><pre><code>ceph-osd:\n  osd-devices: /dev/sda /dev/sdb\n</code></pre> <pre><code>juju deploy -n 3 --channel quincy/stable --config ceph-osd.yaml --constraints tags=compute ceph-osd\n</code></pre></p>"},{"location":"roteiro3/main/#4-nova-compute","title":"4. Nova Compute","text":"<p>Arquivo: <code>nova-compute.yaml</code> </p> <pre><code>nova-compute:\n  config-flags: default_ephemeral_format=ext4\n  enable-live-migration: true\n  enable-resize: true\n  migration-auth-type: ssh\n  virt-type: qemu\n</code></pre> <pre><code>juju deploy -n 3 --to 0,1,2 --channel yoga/stable --config nova-compute.yaml nova-compute\n</code></pre>"},{"location":"roteiro3/main/#5-mysql-innodb-cluster","title":"5. MySQL InnoDB Cluster","text":"<pre><code>juju deploy -n 3 --to lxd:0,lxd:1,lxd:2 --channel 8.0/stable mysql-innodb-cluster\n</code></pre>"},{"location":"roteiro3/main/#6-vault","title":"6. Vault","text":"<pre><code>juju deploy --to lxd:2 vault --channel 1.8/stable\n</code></pre> <pre><code>juju deploy --channel 8.0/stable mysql-router vault-mysql-router\njuju integrate vault-mysql-router:db-router mysql-innodb-cluster:db-router\njuju integrate vault-mysql-router:shared-db vault:shared-db\n</code></pre> <p>Unseal</p> <p>Vault must now be initialised and unsealed. The vault charm will also need to be authorised to carry out certain tasks. These steps are covered in the vault charm documentation. Perform them NOW.</p> <p>CA Certificate (Self-signed)</p> <p>Provide Vault with a CA certificate, we need to generate a self-signed CA certificate, so it can issue certificates to cloud API services. This is covered on the Managing TLS certificates page. Do this now.</p> <pre><code>juju run vault/leader generate-root-ca\n</code></pre> <p>Cloud applications are TLS-enabled via the vault:certificates relation. Below we start with the cloud database. Although the latter has a self-signed certificate, it is recommended to use the one signed by Vault\u2019s CA: <pre><code>juju integrate mysql-innodb-cluster:certificates vault:certificates\n</code></pre></p>"},{"location":"roteiro3/main/#7-neutron-networking","title":"7. Neutron Networking","text":"<p>Arquivo: <code>neutron.yaml</code> </p> <pre><code>ovn-chassis:\n  bridge-interface-mappings: br-ex:eth0\n  ovn-bridge-mappings: physnet1:br-ex\nneutron-api:\n  neutron-security-groups: true\n  flat-network-providers: physnet1\n</code></pre> <pre><code>juju deploy -n 3 --to lxd:0,lxd:1,lxd:2 --channel 22.03/stable ovn-central\n</code></pre> <pre><code>juju deploy --to lxd:1 --channel yoga/stable --config neutron.yaml neutron-api\n</code></pre> <pre><code>juju deploy --channel yoga/stable neutron-api-plugin-ovn\njuju deploy --channel 22.03/stable --config neutron.yaml ovn-chassis\n</code></pre> <pre><code>juju integrate neutron-api-plugin-ovn:neutron-plugin neutron-api:neutron-plugin-api-subordinate\njuju integrate neutron-api-plugin-ovn:ovsdb-cms ovn-central:ovsdb-cms\njuju integrate ovn-chassis:ovsdb ovn-central:ovsdb\njuju integrate ovn-chassis:nova-compute nova-compute:neutron-plugin\njuju integrate neutron-api:certificates vault:certificates\njuju integrate neutron-api-plugin-ovn:certificates vault:certificates\njuju integrate ovn-central:certificates vault:certificates\njuju integrate ovn-chassis:certificates vault:certificates\n</code></pre> <pre><code>juju deploy --channel 8.0/stable mysql-router neutron-api-mysql-router\njuju integrate neutron-api-mysql-router:db-router mysql-innodb-cluster:db-router\njuju integrate neutron-api-mysql-router:shared-db neutron-api:shared-db\n</code></pre>"},{"location":"roteiro3/main/#8-keystone","title":"8. Keystone","text":"<pre><code>juju deploy --to lxd:0 --channel yoga/stable keystone\n</code></pre> <pre><code>juju deploy --channel 8.0/stable mysql-router keystone-mysql-router\njuju integrate keystone-mysql-router:db-router mysql-innodb-cluster:db-router\njuju integrate keystone-mysql-router:shared-db keystone:shared-db\n</code></pre> <pre><code>juju integrate keystone:identity-service neutron-api:identity-service\njuju integrate keystone:certificates vault:certificates\n</code></pre>"},{"location":"roteiro3/main/#9-rabbitmq","title":"9. RabbitMQ","text":"<pre><code>juju deploy --to lxd:2 --channel 3.9/stable rabbitmq-server\n</code></pre> <pre><code>juju integrate rabbitmq-server:amqp neutron-api:amqp\njuju integrate rabbitmq-server:amqp nova-compute:amqp\n</code></pre>"},{"location":"roteiro3/main/#10-nova-cloud-controller","title":"10. Nova Cloud Controller","text":"<p>Arquivo: <code>ncc.yaml</code> </p> <pre><code>nova-cloud-controller:\n  network-manager: Neutron\n</code></pre> <pre><code>juju deploy --to lxd:2 --channel yoga/stable --config ncc.yaml nova-cloud-controller\n</code></pre> <pre><code>juju deploy --channel 8.0/stable mysql-router ncc-mysql-router\njuju integrate ncc-mysql-router:db-router mysql-innodb-cluster:db-router\njuju integrate ncc-mysql-router:shared-db nova-cloud-controller:shared-db\n</code></pre> <pre><code>juju integrate nova-cloud-controller:identity-service keystone:identity-service\njuju integrate nova-cloud-controller:amqp rabbitmq-server:amqp\njuju integrate nova-cloud-controller:neutron-api neutron-api:neutron-api\njuju integrate nova-cloud-controller:cloud-compute nova-compute:cloud-compute\njuju integrate nova-cloud-controller:certificates vault:certificates\n</code></pre>"},{"location":"roteiro3/main/#11-placement","title":"11. Placement","text":"<pre><code>juju deploy --to lxd:2 --channel yoga/stable placement\n</code></pre> <pre><code>juju deploy --channel 8.0/stable mysql-router placement-mysql-router\njuju integrate placement-mysql-router:db-router mysql-innodb-cluster:db-router\njuju integrate placement-mysql-router:shared-db placement:shared-db\n</code></pre> <pre><code>juju integrate placement:identity-service keystone:identity-service\njuju integrate placement:placement nova-cloud-controller:placement\njuju integrate placement:certificates vault:certificates\n</code></pre>"},{"location":"roteiro3/main/#12-horizon-openstack-dashboard","title":"12. Horizon - OpenStack Dashboard","text":"<pre><code>juju deploy --to lxd:2 --channel yoga/stable openstack-dashboard\n</code></pre> <pre><code>juju deploy --channel 8.0/stable mysql-router dashboard-mysql-router\njuju integrate dashboard-mysql-router:db-router mysql-innodb-cluster:db-router\njuju integrate dashboard-mysql-router:shared-db openstack-dashboard:shared-db\n</code></pre> <pre><code>juju integrate openstack-dashboard:identity-service keystone:identity-service\njuju integrate openstack-dashboard:certificates vault:certificates\n</code></pre>"},{"location":"roteiro3/main/#13-glance","title":"13. Glance","text":"<pre><code>juju deploy --to lxd:2 --channel yoga/stable glance\n</code></pre> <pre><code>juju deploy --channel 8.0/stable mysql-router glance-mysql-router\njuju integrate glance-mysql-router:db-router mysql-innodb-cluster:db-router\njuju integrate glance-mysql-router:shared-db glance:shared-db\n</code></pre> <pre><code>juju integrate glance:image-service nova-cloud-controller:image-service\njuju integrate glance:image-service nova-compute:image-service\njuju integrate glance:identity-service keystone:identity-service\njuju integrate glance:certificates vault:certificates\n</code></pre>"},{"location":"roteiro3/main/#14-ceph-monitor","title":"14. Ceph Monitor","text":"<p>Arquivo: <code>ceph-mon.yaml</code> </p> <pre><code>ceph-mon:\n  expected-osd-count: 3\n  monitor-count: 3\n</code></pre> <pre><code>juju deploy -n 3 --to lxd:0,lxd:1,lxd:2 --channel quincy/stable --config ceph-mon.yaml ceph-mon\n</code></pre> <pre><code>juju integrate ceph-mon:osd ceph-osd:mon\njuju integrate ceph-mon:client nova-compute:ceph\njuju integrate ceph-mon:client glance:ceph\n</code></pre>"},{"location":"roteiro3/main/#15-cinder","title":"15. Cinder","text":"<p>Arquivo: <code>cinder.yaml</code> </p> <pre><code>cinder:\n  block-device: None\n  glance-api-version: 2\n</code></pre> <pre><code>juju deploy --to lxd:1 --channel yoga/stable --config cinder.yaml cinder\n</code></pre> <pre><code>juju deploy --channel 8.0/stable mysql-router cinder-mysql-router\njuju integrate cinder-mysql-router:db-router mysql-innodb-cluster:db-router\njuju integrate cinder-mysql-router:shared-db cinder:shared-db\n</code></pre> <pre><code>juju integrate cinder:cinder-volume-service nova-cloud-controller:cinder-volume-service\njuju integrate cinder:identity-service keystone:identity-service\njuju integrate cinder:amqp rabbitmq-server:amqp\njuju integrate cinder:image-service glance:image-service\njuju integrate cinder:certificates vault:certificates \n</code></pre> <pre><code>juju deploy --channel yoga/stable cinder-ceph\n</code></pre> <pre><code>juju integrate cinder-ceph:storage-backend cinder:storage-backend\njuju integrate cinder-ceph:ceph ceph-mon:client\njuju integrate cinder-ceph:ceph-access nova-compute:ceph-access\n</code></pre>"},{"location":"roteiro3/main/#16-ceph-rados-gateway","title":"16. Ceph RADOS Gateway","text":"<pre><code>juju deploy --to lxd:0 --channel quincy/stable ceph-radosgw\n</code></pre> <pre><code>juju integrate ceph-radosgw:mon ceph-mon:radosgw\n</code></pre>"},{"location":"roteiro3/main/#17-ceph-osd-integration","title":"17. Ceph-OSD Integration","text":"<p>Aten\u00e7\u00e3o!!!</p> <p>Execute o comando abaixo apenas se voc\u00ea estiver certeza de que todos os procedimentos anteriores foram realizados com sucesso.</p> <pre><code>juju config ceph-osd osd-devices='/dev/sdb'\n</code></pre> <p>At this time the Unit section output to command juju status should look similar to this:</p> <p></p>"},{"location":"roteiro3/main/#setup","title":"Setup","text":"<p>Chegou a hora de configurar os servi\u00e7os que controlam:</p> <ul> <li>as VMs (Nova);</li> <li>os volumes de disco (Cinder), e;</li> <li>a estrutura de rede virtual (Neutron).</li> </ul> <p>Para isso, \u00e9 preciso:</p> <ol> <li>Carregar as vari\u00e1veis de ambiente e se autenticar (Keystone) no sistema - openrc;</li> <li>Utilizar o dashboard (Horizon) para visualizar as mudan\u00e7as que est\u00e3o sendo feitas;</li> <li>Importar uma imagem do Ubuntu Jammy para o Glance (servidor de imagens);</li> <li>Criar os flavors (instance type) para as VMs;</li> <li>Criar uma rede externa (subnet) para conectar as VMs \u00e0 rede f\u00edsica;</li> <li>Criar uma rede interna (subnet) e um roteador (router) para conectar as VMs \u00e0 rede externa.</li> </ol>"},{"location":"roteiro3/main/#1-passo-1-autenticacao","title":"1. Passo 1: Autentica\u00e7\u00e3o","text":"<p>Crie, download, o arquivo openrc com as credenciais de acesso ao OpenStack. O arquivo deve conter as seguintes vari\u00e1veis de credenciais para o OpenStack.</p>"},{"location":"roteiro3/main/#2-passo-2-horizon","title":"2. Passo 2: Horizon","text":"<p>Acesse o Horizon (dashboard) como administrador e mantenha ele aberto durante todo o setup do openstack (para ver as mudan\u00e7as acontecendo!).</p> <p></p> <p>Status do JUJU.</p> <p></p> <p>Dashboard do MAAS com as m\u00e1quinas.</p> <p></p> <p>Aba compute overview no OpenStack Dashboard.</p> <p></p> <p>Aba compute instances no OpenStack Dashboard.</p> <p></p> <p>Aba network topology no OpenStack Dashboard.</p>"},{"location":"roteiro3/main/#3-passo-3-imagens-e-flavors","title":"3. Passo 3: Imagens e Flavors","text":"<p>Usando a documenta\u00e7\u00e3o oficial, fa\u00e7a o seguinte:</p> <ul> <li>Instale o client do Openstack no main via snap.</li> </ul> <pre><code>sudo snap install openstackclients\n</code></pre> <ul> <li>Carregue as credenciais em openrc: </li> </ul> <pre><code>source ~/openrc\n</code></pre> <ul> <li>Verifique os servi\u00e7os dispon\u00edveis no Openstack:</li> </ul> <pre><code>openstack service list\n</code></pre> <ul> <li>Fa\u00e7a pequenos ajustes na rede:</li> </ul> <pre><code>juju config neutron-api enable-ml2-dns=\"true\"\njuju config neutron-api-plugin-ovn dns-servers=\"172.16.0.1\"\n</code></pre> <ul> <li> <p>Importe a imagem do Ubuntu Jammy. Voc\u00ea precisar\u00e1 procurar esta imagem.</p> </li> <li> <p>Analise o comando:</p> </li> </ul> <pre><code>openstack flavor create --help\n</code></pre> <ul> <li>Crie os flavors (instance type) - SEM ephemeral disk:</li> </ul> Flavor Name vCPUs RAM (GB) Disk m1.tiny 1 1 20 m1.small 1 2 20 m1.medium 2 4 20 m1.large 4 8 20"},{"location":"roteiro3/main/#4-passo-4-rede-externa","title":"4. Passo 4: Rede Externa","text":"<ul> <li>Configure a rede externa. Usar uma faixa de aloca\u00e7\u00e3o entre 172.16.7.0 e 172.16.8.255.</li> </ul> <pre><code>openstack network create --external --share \\\n   --provider-network-type flat --provider-physical-network physnet1 \\\n   ext_net\n</code></pre> <pre><code>openstack subnet create --network ext_net --no-dhcp \\\n   --gateway 172.16.0.1 --subnet-range 172.16.0.0/20 \\\n   --allocation-pool start=172.16.7.0,end=172.16.8.255 \\\n   ext_subnet\n</code></pre>"},{"location":"roteiro3/main/#5-passo-5-rede-interna-e-roteador","title":"5. Passo 5: Rede Interna e Roteador","text":"<ul> <li>Crie a rede interna e o roteador. Usar a subnet 192.169.0.0/24. N\u00e3o use DNS.</li> </ul> <pre><code>openstack network create --internal user1_net\n\nopenstack subnet create --network user1_net \\\n   --subnet-range 192.169.0.0/24 \\\n   --allocation-pool start=192.169.0.10,end=192.169.0.90 \\\n   user1_subnet\n</code></pre> <pre><code>openstack router create user1_router\nopenstack router add subnet user1_router user1_subnet\nopenstack router set user1_router --external-gateway ext_net\n</code></pre>"},{"location":"roteiro3/main/#6-passo-6-conexao","title":"6. Passo 6: Conex\u00e3o","text":"<ul> <li>Importe (upload) um key-pair, usando public key (id_rsa.pub) da m\u00e1quina onde est\u00e1 o MaaS.</li> </ul> <pre><code>openstack keypair create --public-key ~/.ssh/id_rsa.pub user1\n</code></pre> <pre><code>openstack security group create --description 'Allow SSH' Allow_SSH\nopenstack security group rule create --proto tcp --dst-port 22 Allow_SSH\n</code></pre> <ul> <li> <p>Via o Horizon (dashboard), como administrador:</p> <ul> <li>Adicione a libera\u00e7\u00e3o do SSH e ALL ICMP no security group default.</li> <li>Verifique se a topologia de rede faz sentido. Ela deve ser semelhante ao projeto da sua rede f\u00edsica, por\u00e9m com mais um n\u00edvel dentro. Aten\u00e7\u00e3o: a rede n\u00e3o existe fisicamente, \u00e9 tudo virtual.</li> </ul> </li> </ul>"},{"location":"roteiro3/main/#7-passo-7-instancia","title":"7. Passo 7: Inst\u00e2ncia","text":"<ul> <li>Dispare uma inst\u00e2ncia m1.tiny com o nome client e sem Novo Volume;</li> </ul> <pre><code>openstack server create --image jammy-amd64 --flavor m1.tiny    --key-name user1 --network user1_net --security-group Allow_SSH    client\n</code></pre> <ul> <li>Aloque um floating IP para a inst\u00e2ncia;</li> </ul> <pre><code>FLOATING_IP=$(openstack floating ip create -f value -c floating_ip_address ext_net)\nopenstack server add floating ip client $FLOATING_IP\n</code></pre> <ul> <li>Teste a conex\u00e3o SSH! Em caso de erro, volte e verifique se as etapas anteriores est\u00e3o corretas.</li> </ul> <p>Dashboard do MAAS com as m\u00e1quinas.</p> <p></p> <p>Aba compute overview no OpenStack.</p> <p></p> <p>Aba compute instances no OpenStack.</p> <p></p> <p>Aba network topology no OpenStack.</p> <ol> <li>Enquanto o Dashboard do MAAS n\u00e3o muda, ap\u00f3s criar a inst\u00e2ncia, as abas Compute Overview, Compute Instances e Network Topology mostram as mudan\u00e7as. No qual, quando n\u00e3o existia nenhuma inst\u00e2ncia, n\u00e3o aparecia nada em nenhuma das abas, e, agora, aparece a inst\u00e2ncia client, na topologia mostra o esquema da rede, e na aba de overview mostra a vis\u00e3o geral de tudo.</li> </ol>"},{"location":"roteiro3/main/#escalando-os-nos","title":"Escalando os n\u00f3s","text":"<p>No OpenStack, escalar os n\u00f3s de configura\u00e7\u00e3o \u00e9 essencial para melhorar a capacidade, a resili\u00eancia e o desempenho dos servi\u00e7os em um ambiente de nuvem. Ao adicionar novos n\u00f3s de computing e block storage, a infraestrutura ganha flexibilidade para lidar com o aumento de carga e a demanda por recursos.</p> <p>Benef\u00edcios da Escala dos N\u00f3s de Configura\u00e7\u00e3o Aumento de Capacidade de Processamento: Ao escalar os n\u00f3s de computing, \u00e9 poss\u00edvel executar mais inst\u00e2ncias de m\u00e1quinas virtuais (VMs) simultaneamente, o que permite atender a mais usu\u00e1rios e aplica\u00e7\u00f5es. Esse aumento de capacidade \u00e9 fundamental para garantir o atendimento \u00e0 demanda, especialmente em ambientes que precisam se adaptar rapidamente a flutua\u00e7\u00f5es de uso.</p> <p>Alta Disponibilidade e Toler\u00e2ncia a Falhas: A distribui\u00e7\u00e3o de servi\u00e7os cr\u00edticos, como computing e block storage, em m\u00faltiplos n\u00f3s contribui para uma arquitetura mais robusta. Com mais n\u00f3s, falhas em uma m\u00e1quina t\u00eam impacto reduzido no sistema geral, uma vez que as cargas podem ser automaticamente redirecionadas para outros n\u00f3s ativos.</p> <p>Melhoria de Desempenho e Lat\u00eancia Reduzida: Com mais n\u00f3s de armazenamento e computa\u00e7\u00e3o, os dados e os processos est\u00e3o fisicamente mais pr\u00f3ximos dos recursos e das VMs que os utilizam, reduzindo lat\u00eancias de acesso e melhorando a efici\u00eancia geral do sistema.</p> <p>Escalabilidade Horizontal: Em vez de aumentar a capacidade de uma \u00fanica m\u00e1quina (escalabilidade vertical), adicionar novos n\u00f3s permite uma escalabilidade horizontal, que \u00e9 mais econ\u00f4mica e eficiente em termos de recursos, al\u00e9m de ser mais f\u00e1cil de gerenciar. OpenStack \u00e9 ideal para esse tipo de escalabilidade, pois os servi\u00e7os de orquestra\u00e7\u00e3o como Nova e Ceph distribuem automaticamente as cargas entre os novos n\u00f3s.</p> <p>Vamos adicionar o n\u00f3 reserva ao openstack no cluster como n\u00f3 de computing e block storage.</p> <ul> <li> <p>Verfique no Dashboard do MaaS se ainda h\u00e1 uma m\u00e1quina dispon\u00edvel (m\u00e1quina que reservamos/allocated). Fa\u00e7a o release da m\u00e1quina que est\u00e1 ALLOCATED (cuidado para n\u00e3o errar!)</p> </li> <li> <p>Instale o hypervisor, realizando o deploy na m\u00e1quina:</p> </li> </ul> <pre><code>juju add-unit nova-compute\n</code></pre> <ul> <li>Anote o n\u00famero da m\u00e1quina adicionada no status e instale o block storage:</li> </ul> <pre><code>juju add-unit --to 3 ceph-osd\n</code></pre> <p></p> <p>Arquitetura de rede.</p>"},{"location":"roteiro3/main/#app","title":"App","text":"<p>TAREFA: Levantar as aplica\u00e7\u00f5es em m\u00e1quinas virtuais do Openstack:</p> <ul> <li>2 inst\u00e2ncias com a API do projeto, etapa 1;</li> <li>1 inst\u00e2ncia com banco de dados, etapa 1, e;</li> <li>1 inst\u00e2ncia com LoadBalancer, Nginx.</li> </ul>"},{"location":"roteiro3/main/#etapas","title":"Etapas:","text":"<ol> <li> <p>Primeiro Passo: Criar as inst\u00e2ncias e seus floating IPs.</p> </li> <li> <p>Segundo Passo: LoadBalancer:</p> </li> </ol> <pre><code>sudo apt update\nsudo apt install nginx\n</code></pre> <pre><code>sudo nano /etc/nginx/sites-available/default\n</code></pre> <p>Coloque as seguintes linhas:</p> <ul> <li>upstream backend { server 172.16.8.234; server 172.16.7.4; }</li> <li>location / { proxy_pass http://backend; }</li> </ul> <pre><code>sudo service nginx restart\n</code></pre> <ol> <li> <p>Terceiro Passo: DataBase:</p> </li> <li> <p>Quarto Passo: APIs:</p> </li> </ol> <p></p> <p>Arquitetura de rede da infraestrutura dentro do Dashboard do Openstack.</p> <p></p> <p>Lista de VMs utilizadas com nome e IPs alocados.</p> <p></p> <p>Dashboard do FastAPI conectado via m\u00e1quina Nginx/LB.</p> <p></p> <p>Server (m\u00e1quina f\u00edsica) que a inst\u00e2ncia load balancer foi alocada pelo OpenStack.</p> <p></p> <p>Server (m\u00e1quina f\u00edsica) que a inst\u00e2ncia api 1 foi alocada pelo OpenStack.</p> <p></p> <p>Server (m\u00e1quina f\u00edsica) que a inst\u00e2ncia api 2 foi alocada pelo OpenStack.</p> <p></p> <p>Server (m\u00e1quina f\u00edsica) que a inst\u00e2ncia db (database) foi alocada pelo OpenStack.</p>"},{"location":"roteiro4/main/","title":"Roteiro 4","text":""},{"location":"roteiro4/main/#objetivo","title":"Objetivo","text":"<ul> <li>Entender os conceitos b\u00e1sicos Infraestrutura como c\u00f3digo.</li> <li>Entender os conceitos b\u00e1sicos sobre SLA e DR.</li> </ul>"},{"location":"roteiro4/main/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Terminar o cap\u00edtulo anterior (Openstack) Realizar a leitura [Kavis - Cap 11 e Cap 13]</li> </ul>"},{"location":"roteiro4/main/#o-que-e-terraform-em-infraestrutura-como-codigo","title":"O que \u00e9 Terraform em Infraestrutura como C\u00f3digo?","text":"<p>Terraform \u00e9 a infraestrutura da HashiCorp como ferramenta de c\u00f3digo. Ele permite que voc\u00ea defina recursos e infraestrutura em arquivos de configura\u00e7\u00e3o declarativos leg\u00edveis por humanos e gerencie o ciclo de vida de sua infraestrutura. O uso do Terraform tem v\u00e1rias vantagens em rela\u00e7\u00e3o ao gerenciamento manual de sua infraestrutura:</p> <ol> <li>O Terraform pode gerenciar a infraestrutura em v\u00e1rias plataformas de nuvem.</li> <li>A linguagem de configura\u00e7\u00e3o leg\u00edvel por humanos ajuda voc\u00ea a escrever c\u00f3digo de infraestrutura rapidamente.</li> <li>O estado do Terraform permite rastrear altera\u00e7\u00f5es de recursos em todas as suas implanta\u00e7\u00f5es.</li> <li>Voc\u00ea pode confirmar suas configura\u00e7\u00f5es no controle de vers\u00e3o para colaborar com seguran\u00e7a na infraestrutura.</li> </ol> <p>Para implantar infraestrutura com o Terraform: <pre><code>* Scope         - Identifique a infraestrutura para o seu projeto.\n* Author        - Escreva a configura\u00e7\u00e3o para sua infraestrutura.\n* Initialize    - Instale os plugins que o Terraform precisa para gerenciar a infraestrutura.\n* Plan          - Visualize as altera\u00e7\u00f5es que o Terraform far\u00e1 para corresponder \u00e0 sua configura\u00e7\u00e3o.\n* Apply         - Fa\u00e7a as altera\u00e7\u00f5es planejadas.\n</code></pre></p>"},{"location":"roteiro4/main/#instalar-terraform","title":"Instalar Terraform","text":"<p>Instala\u00e7\u00e3o do Terraform no Ubuntu/Debian:</p> <ul> <li> <p>wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg</p> </li> <li> <p>gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint</p> </li> <li> <p>echo \"deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/hashicorp.list</p> </li> <li> <p>sudo apt update &amp;&amp; sudo apt install terraform</p> </li> </ul>"},{"location":"roteiro4/main/#infraestrutura","title":"Infraestrutura","text":"<p>Criar um dom\u00ednio, dois projetos e um usu\u00e1rio \"Aluno\" em cada projeto no OpenStack via Horizon Dashboard (a interface web do OpenStack), siga os passos abaixo. Este processo pode variar ligeiramente dependendo da vers\u00e3o do OpenStack que voc\u00ea est\u00e1 utilizando, mas em geral, os passos devem ser bastante similares.</p>"},{"location":"roteiro4/main/#criar-um-unico-domain","title":"Criar um \u00fanico Domain","text":"<ul> <li> <p>Criar um Dom\u00ednio Navegue at\u00e9 Identity &gt; Domains. Clique em Create Domain. Forne\u00e7a o nome para o dom\u00ednio (AlunosDomain) e uma descri\u00e7\u00e3o opcional. Clique em Create Domain para finalizar a cria\u00e7\u00e3o.</p> </li> <li> <p>Defina o Domain criado com o novo Contexto de uso.</p> </li> </ul>"},{"location":"roteiro4/main/#criar-um-projeto-para-cada-aluno","title":"Criar um projeto para cada Aluno.","text":"<ul> <li> <p>Criar Projeto Navegue at\u00e9 Identity &gt; Projects. Clique em Create Project. Forne\u00e7a o nome para o projeto. Adicione uma descri\u00e7\u00e3o opcional para o projeto. Configure qualquer quota que voc\u00ea deseje para o projeto. Clique em Create Project para concluir. Crie o proximo project, aluno2.</p> </li> <li> <p>Criar Usu\u00e1rios Navegue at\u00e9 Identity &gt; Users. Clique em Create User. Forne\u00e7a o nome do usu\u00e1rio (por exemplo, aluno1), e-mail, descri\u00e7\u00e3o, e uma senha inicial. Selecione o dom\u00ednio (que voces acabaram de criar). Selecione o projeto deste aluno para associar o usu\u00e1rio a este projeto. Atribua-lhe os pap\u00e9is administrativos. Repita este processo para o segundo usu\u00e1rio (aluno2). Clique em Create User para cada usu\u00e1rio para finalizar.</p> </li> </ul>"},{"location":"roteiro4/main/#app","title":"App","text":""},{"location":"roteiro4/main/#criando-a-infraestrutura-utilizando-iac","title":"Criando a Infraestrutura utilizando IaC.","text":"<p>O Terraform conta com arquivos .tf, que definem a infraestrutura.</p> <p>O Terraform sabe o que \u00e9 implantado por meio do arquivo de estado. Este estado \u00e9 armazenado por padr\u00e3o em um arquivo local chamado \u201cterraform.tfstate\u201d. Tamb\u00e9m pode ser armazenado remotamente, o que funciona melhor em um ambiente de equipe.</p> <p>O Terraform permite v\u00e1rios provedores, normalmente inicializados em um arquivo chamado provider.tf.</p> <p>A estrutura de pastas ficar\u00e1 conforme abaixo:</p> <pre><code>terraform\n    \u251c\u2500\u2500 instance.tf\n    \u251c\u2500\u2500 network.tf\n    \u251c\u2500\u2500 provider.tf\n    \u2514\u2500\u2500 router.tf\n</code></pre> <ul> <li>Cada Aluno deve entrar no MAIN pela sua maquina e criar a estrutura.</li> <li>Crie umapasta para voc\u00ea com o mesmo nome do projeto criado na etapa acima:</li> <li>Dentro desta pasta crie a pasta terraform e dentro dela crie os arquivos abaixo: (modifique o que for necess\u00e1rio)</li> </ul> <p>provider.tf</p> <pre><code># Terraform Openstack deployment\n# Author: Tiago Demay - tiagoaodc@insper.edu.br\n\n\n# Define required providers\nterraform {\nrequired_version = \"&gt;= 0.14.0\"\n  required_providers {\n    openstack = {\n      source  = \"terraform-provider-openstack/openstack\"\n      version = \"~&gt; 1.35.0\"\n    }\n  }\n}\n\n\n# Configure the OpenStack Provider\n\nprovider \"openstack\" {\n  region              = \"RegionOne\"\n  user_name           = \"SEU_USUARIO\"\n}\n</code></pre> <p>instance1.tf</p> <pre><code>resource \"openstack_compute_instance_v2\" \"instancia\" {\n  name            = \"instancia\"\n  image_name      = \"jammy-amd64\"\n  flavor_name     = \"m1.small\"\n  key_pair        = \"mykey\"\n  security_groups = [\"default\"]\n\n  network {\n    name = \"network_1\"\n  }\n\n  depends_on = [openstack_networking_network_v2.network_1]\n\n}\n</code></pre> <p>instance2.tf</p> <pre><code>resource \"openstack_compute_instance_v2\" \"instancia2\" {\n  name            = \"instancia2\"\n  image_name      = \"jammy-amd64\"\n  flavor_name     = \"m1.tiny\"\n  key_pair        = \"mykey\"\n  security_groups = [\"default\"]\n\n  network {\n    name = \"network_1\"\n  }\n\n  depends_on = [openstack_networking_network_v2.network_1]\n\n}\n</code></pre> <p>\u2139\ufe0f Info observa\u00e7\u00e3o amiga: a sua rede e do seu amigo n\u00e3o podem ter o mesmo nome! Ent\u00e3o uma delas pode ser chamada de <code>network_1</code> e outra <code>network_2</code>, por exemplo! (lembre de mudar em todos arquivos que a utilizam).</p> <p>network.tf</p> <pre><code>resource \"openstack_networking_network_v2\" \"network_1\" {\n  name           = \"network_1\"\n  admin_state_up = \"true\"\n}\n\nresource \"openstack_networking_subnet_v2\" \"subnet_1\" {\n  network_id = \"${openstack_networking_network_v2.network_1.id}\"\n  cidr       = \"192.167.199.0/24\"\n}\n</code></pre> <p>\u2139\ufe0f Info Alterar a variavel external_network_id = &lt;\"ID_EXT_NETWORK\"&gt; para o ID da sua rede externa, voc\u00ea pode encontrar esta informac\u00e3o, acessando o Dashboard do Openstack ou via CLI openstack</p> <p>router.tf</p> <pre><code>resource \"openstack_networking_router_v2\" \"router_1\" {\n  name                = \"router_1\"\n  admin_state_up      = true\n  external_network_id = &lt;\"ID_EXT_NETWORK\"&gt;\n}\n\nresource \"openstack_networking_router_interface_v2\" \"int_1\" {\n  router_id = \"${openstack_networking_router_v2.router_1.id}\"\n  subnet_id = \"${openstack_networking_subnet_v2.subnet_1.id}\"\n}\n</code></pre>"},{"location":"roteiro4/main/#credenciais-do-seu-usuario","title":"Credenciais do seu usu\u00e1rio","text":"<ol> <li>Entre no dashboard com o login do seu usuario (cada aluno ter\u00e1 o seu);</li> <li>Na aba project \u2192 API access, fa\u00e7a o download do openstack rc file do seu usu\u00e1rio;</li> <li>Copie o conteudo para a sua pasta de projeto (Obs: o arquivo ser\u00e1 baixado noseu notebook pessoal, passe o conteudo para o servidor Main);</li> <li>De a permiss\u00e3o de execu\u00e7\u00e3o para o arquivo <code>chmod +x arquivo.sh</code></li> <li>Carregue as variaveis de ambiente do seu usu\u00e1rio <code>source arquivo.sh</code></li> </ol> <p>Para fazer a implementa\u00e7\u00e3o da infraestrutura, execute os comandos abaixo:</p> <p><code>terraform init</code></p> <p><code>terraform plan</code></p> <ul> <li>Este comando \u00e9 utilizado para criar um plano de execu\u00e7\u00e3o. Ele mostra quais a\u00e7\u00f5es o Terraform executar\u00e1 quando voc\u00ea aplicar suas configura\u00e7\u00f5es.</li> </ul> <p><code>terraform apply</code></p> <ul> <li>O comando <code>terraform apply</code> aplica as mudan\u00e7as necess\u00e1rias para alcan\u00e7ar o estado desejado da sua configura\u00e7\u00e3o. Ele cria, atualiza ou destr\u00f3i os recursos conforme necess\u00e1rio.</li> </ul> <p>Utlize a CLI do openstack para verificar que a instancia foi criada.</p>"},{"location":"roteiro4/main/#check-points-por-aluno","title":"Check Points - Por aluno","text":"<p>Aba Identy projects no OpenStack.</p> <p></p> <p>Aba Identy users no OpenStack.</p>"},{"location":"roteiro4/main/#arthur","title":"Arthur","text":"<p>Aba compute overview no OpenStack.</p> <p></p> <p>Aba compute instances no OpenStack.</p> <p></p> <p>Aba network topology no OpenStack.</p>"},{"location":"roteiro4/main/#leonardo","title":"Leonardo","text":"<p>Aba compute overview no OpenStack.</p> <p></p> <p>Aba compute instances no OpenStack.</p> <p></p> <p>Aba network topology no OpenStack.</p> Voc\u00ea \u00e9 o CTO (Chief Technology Officer) de uma grande empresa com sede em v\u00e1rias capitais no Brasil e precisa implantar um sistema cr\u00edtico, de baixo custo e com dados sigilosos para a \u00e1rea operacional. Voc\u00ea escolheria Public Cloud ou Private Cloud? <p>Escolheria Public Cloud, como AWS , pois al\u00e9m de ser mais baixo custo, por n\u00e3o ter que comprar todos os equipamentos, e sim apenas alugar uma m\u00e1quina deles, tamb\u00e9m ja possui um sistema de seguran\u00e7a de dados consolidados, onde numa Private Cloud n\u00e3o teria.</p> Agora explique para ao RH por que voc\u00ea precisa de um time de DevOps. <p>Um time de DevOps otimiza a agilidade e a estabilidade das opera\u00e7\u00f5es, automatizando processos, reduzindo erros em entregas cont\u00ednuas e monitorando sistemas em tempo real. Com isso, a equipe consegue resolver falhas rapidamente e se adaptar a mudan\u00e7as, assegurando que as aplica\u00e7\u00f5es tenham alta disponibilidade e desempenho. A aus\u00eancia desse suporte eleva os riscos de interrup\u00e7\u00f5es, impactando \u00e1reas cr\u00edticas da empresa.</p> <p>Pergunta: Considerando o mesmo sistema cr\u00edtico, agora sua equipe dever\u00e1 planejar e implementar um ambiente resiliente e capaz de mitigar poss\u00edveis interrup\u00e7\u00f5es/indisponibilidades. Para isso, identifiquem quais s\u00e3o as principais amea\u00e7as que podem colocar sua infraestrutura em risco, e descreva as principais a\u00e7\u00f5es que possibilitem o restabelecimento de todas as aplica\u00e7\u00f5es de forma r\u00e1pida e organizada caso algum evento cause uma interrup\u00e7\u00e3o ou incidente de seguran\u00e7a. Para isso monte um plano de DR e HA que considere entre as a\u00e7\u00f5es:</p> <ul> <li>Mapeamento das principais amea\u00e7as que podem colocar em riscos o seu ambiente.</li> <li>Elenque e priorize as a\u00e7\u00f5es para a recupera\u00e7\u00e3o de seu ambiente em uma poss\u00edvel interrup\u00e7\u00e3o/desastre.</li> <li>Como sua equipe ir\u00e1 tratar a pol\u00edtica de backup?</li> <li>Considerando poss\u00edveis instabilidades e problemas, descreva como alta disponibilidade ser\u00e1 implementada em sua infraestrutura.</li> </ul> <p>Resposta </p> <ul> <li>Entre as principais amea\u00e7as, est\u00e3o falhas de hardware, desastres naturais, guerras, ataques de hacker e/ou terroristas e falta de energia, o que todos ocasionariam em perda de dados e componentes e preju\u00edzos financeiros. </li> <li>O melhor caso \u00e9 fazer frequentemente backups do ambiente e salvando em outros lugares. Esse m\u00e9todo \u00e9 o melhor para evitar a perda de dados, e no caso de desastre ambiental, n\u00e3o tem muito o que fazer, vai ter que substituir os componentes danificados, mas cronstruindo um espa\u00e7o e infraestrutura boa e protegida, fisicamente, ja ajuda a evitar grandes estragos do hardware.</li> <li>Todo dia ser\u00e1 feito um bakcup, e os backups ser\u00e3o salvos em 3 lugares, no pr\u00f3prio ambiente, em uma cidade 100 km ou mais longe da cidade em que est\u00e1 o ambiente, e o \u00faltimo, em outro pa\u00eds.</li> <li>Redund\u00e2ncia, Monitoramento e Resposta Automatizada e Armazenamento de Dados com Replica\u00e7\u00e3o:<ul> <li>Redund\u00e2ncia: Load balancers, servidores em clusters e rede redundante.</li> <li>Monitoramento e Resposta Automatizada: Monitoramento cont\u00ednuo e Auto-Healing.</li> <li>Armazenamento de Dados com Replica\u00e7\u00e3o: Banco de dados replicados e Solu\u00e7\u00f5es de storage resiliente.</li> </ul> </li> </ul>"}]}